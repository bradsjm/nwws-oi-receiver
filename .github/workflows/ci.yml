name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.12", "3.13"]
      fail-fast: false

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install UV
      uses: astral-sh/setup-uv@v4
      with:
        enable-cache: true

    - name: Install dependencies
      run: |
        uv sync --group dev --group test

    - name: Run code formatting check
      run: |
        uv run ruff format --check .

    - name: Run linting
      run: |
        uv run ruff check .

    - name: Run type checking
      run: |
        uv run basedpyright

    - name: Run tests with coverage
      run: |
        uv run pytest --cov=nwws_receiver --cov-report=xml --cov-report=term-missing

    - name: Upload coverage to Codecov
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.12'
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  build:
    name: Build package
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Install UV
      uses: astral-sh/setup-uv@v4

    - name: Install build dependencies
      run: |
        uv sync --group dev

    - name: Build package
      run: |
        uv run python -m build

    - name: Check package metadata
      run: |
        uv run python -m twine check dist/*

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/

  security:
    name: Security scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Install UV
      uses: astral-sh/setup-uv@v4

    - name: Install dependencies
      run: |
        uv sync --group dev --group test

    - name: Run safety check
      run: |
        uv run safety check --json || true

    - name: Run bandit security scan
      run: |
        uv add bandit[toml]
        uv run bandit -r src/ -f json || true